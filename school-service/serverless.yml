service: swiirl-school

projectDir: ../
frameworkVersion: "3"

useDotenv: true

plugins:
  - serverless-offline

custom:
  region: ${file(../serverless-config.json):region}
  stage: ${file(../serverless-config.json):stage}
  SwiirlInitiativeAssetsBucketName: ${file(../serverless-config.json):swiirlInitiativeAssetsBucketName}-${self:custom.stage}
  SwiirlSchoolAssetsBucketName: ${file(../serverless-config.json):swiirlSchoolAssetsBucketName}-${self:custom.stage}

provider:
  name: aws
  runtime: nodejs16.x
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  profile: swiirl
  timeout: 15
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
    SWIIRL_INITIATIVE_BUCKET: ${self:custom.SwiirlInitiativeAssetsBucketName}
    SWIIRL_SCHOOL_BUCKET: ${self:custom.SwiirlSchoolAssetsBucketName}

  lambdaHashingVersion: 20201221
  httpApi:
    id: !ImportValue SwiirlHttpApiId-${self:custom.stage}

functions:
  search:
    handler: search.handler
    events:
      - httpApi:
          path: /v1/school/search
          method: get
  getSchoolDetails:
    handler: getDetails.handler
    events:
      - httpApi:
          path: /v1/school
          method: get
  update:
    handler: update.handler
    events:
      - httpApi:
          path: /v1/school/update
          method: put
          authorizer:
            type: request
            id: !ImportValue SwiirlGatewayAuthorizerId
