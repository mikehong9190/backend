service: swiirl-auth

projectDir: ../
frameworkVersion: "3"

useDotenv: true

plugins:
  - serverless-offline

custom:
  region: ${file(../serverless-config.json):region}
  stage: ${file(../serverless-config.json):stage}
  SwiirlUserAssetsBucketName: ${file(../serverless-config.json):swiirlUserAssetsBucketName}-${self:custom.stage}
  SwiirlInitiativeAssetsBucketName: ${file(../serverless-config.json):swiirlInitiativeAssetsBucketName}-${self:custom.stage}

provider:
  name: aws
  runtime: nodejs16.x
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  profile: swiirl
  timeout: 15
  environment:
    REGION: ${self:custom.region}
    DB_HOST: ${env:DB_HOST}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
    ANDROID_GOOGLE_CLIENT_ID: ${env:ANDROID_GOOGLE_CLIENT_ID}
    IOS_GOOGLE_CLIENT_ID: ${env:IOS_GOOGLE_CLIENT_ID}
    SWIIRL_USER_BUCKET: ${self:custom.SwiirlUserAssetsBucketName}
    SWIIRL_INITIATIVE_BUCKET: ${self:custom.SwiirlInitiativeAssetsBucketName}

  lambdaHashingVersion: 20201221
  httpApi:
    id: !ImportValue SwiirlHttpApiId-${self:custom.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:*
      Resource: "*"

functions:
  login:
    handler: login.handler
    events:
      - httpApi:
          path: /v1/auth/login
          method: post
  signup:
    handler: signup.handler
    events:
      - httpApi:
          path: /v1/auth/signup
          method: post
  updateSchool:
    handler: addSchoolDetails.handler
    events:
      - httpApi:
          path: /v1/auth/update-school-details
          method: put
  validateEmail:
    handler: validateEmail.emailhandler
    events:
      - httpApi:
          path: /v1/auth/validate-email
          method: post
  sendOTP:
    handler: sendOTP.handler
    events:
      - httpApi:
          path: /v1/auth/send-otp
          method: post
  verifyOTP:
    handler: verifyOTP.handler
    events:
      - httpApi:
          path: /v1/auth/verify-otp
          method: post
