service: swiirl-auth

projectDir: ../
frameworkVersion: "3"

useDotenv: true

plugins:
  - serverless-offline

custom:
  region: ${file(../serverless-config.json):region}
  stage: ${file(../serverless-config.json):stage}

provider:
  name: aws
  runtime: nodejs16.x
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  profile: swiirl
  timeout: 200
  environment:
    REGION: ${self:custom.region}
    DB_HOST: ${env:DB_HOST}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
  lambdaHashingVersion: 20201221
  httpApi:
    id: !ImportValue SwiirlHttpApiId-${self:custom.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:*
      Resource: "*"

functions:
  login:
    handler: login.handler
    events:
      - httpApi:
          path: /v1/login
          method: post
  signup:
    handler: signup.handler
    events:
      - httpApi:
          path: /v1/signup
          method: post
  validateEmail:
    handler: validateEmail.handler
    events:
      - httpApi:
          path: /v1/validate-email
          method: post
  resetPassword:
    handler: resetPassword.handler
    events:
      - httpApi:
          path: /v1/reset-password
          method: post
  sendOTP:
    handler: sendOTP.handler
    events:
      - httpApi:
          path: /v1/send-otp
          method: post
  verifyOTP:
    handler: verifyOTP.handler
    events:
      - httpApi:
          path: /v1/verify-otp
          method: post
